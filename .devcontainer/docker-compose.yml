version: '3.8'

services:
  app:
    build:
      context: ..
      dockerfile: .devcontainer/Dockerfile
    user: vscode
    volumes:
      - ../..:/workspaces:cached
    command: sleep infinity
    init: true
    networks:
      - default_network

  db:
    image: postgres:latest
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: postgres
    networks:
      - default_network

  zookeeper:
    image: wurstmeister/zookeeper
    restart: unless-stopped
    ports:
      - "2181:2181"
    networks:
      - default_network

  kafka:
    image: wurstmeister/kafka
    restart: unless-stopped
    ports:
      - "9092:9092"
    environment:
      KAFKA_CREATE_TOPICS: "Topic1:1:3,Topic2:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_PORT: 9092
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    networks:
      - default_network

  flink:
    image: flink:latest
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      JOB_MANAGER_RPC_ADDRESS: flink
    volumes:
      - ../flink/config.yaml:/config.yaml
    depends_on:
      - kafka
    networks:
      - default_network
    command: jobmanager

networks:
  default_network:

volumes:
  postgres-data: